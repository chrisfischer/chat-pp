syntax = "proto3";

package client_server;


message TextMessage {
    string room = 1;
    string text = 2;
}

message NicknameMessage {
    string room = 1;
    string old_nickname = 2;
    string new_nickname = 3;
}

message LeftMessage {
    string room = 1;
    string nickname = 2;
}

enum VoteType {
    JOIN = 0;
    KICK = 1;
}

message VoteMessage {
    string room = 1;
    string vote_id = 2;
    bool vote = 3;
}

message VoteResultMessage {
    string room = 1;
    bool vote = 3;
    string message = 4;
    int64 total_number_users = 5;
    bool for_current_user = 6;
}

message StartVoteMessage {
    string room = 1;
    string nickname = 2;
    string vote_id = 3; // Optional
    VoteType type = 4;
}

message Message {
    oneof oneof_message {
        TextMessage text_message = 2;
        NicknameMessage nickname_message = 3;
        StartVoteMessage start_vote_message = 4;
        LeftMessage left_message = 5;
        VoteMessage vote_message = 6;
    }
}

message MessageResult {
    bool received = 1;
}

message Empty {}

service ChatService {
    rpc ReceiveMessages(Empty) returns (stream Message) {}
    rpc SendMessage(Message) returns (MessageResult) {}
}
